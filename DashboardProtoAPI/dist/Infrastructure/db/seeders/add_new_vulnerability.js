'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
module.exports = {
    up: (queryInterface, Sequelize) => __awaiter(void 0, void 0, void 0, function* () {
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "Back-up Validation, Process & Standards",
                description: "There are backups; however there is no apparent backup policy which could lead to broken standards and potentail failure in backup avaliability. ",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "Standardized Disaster Recovery Policy & Process",
                description: "DR plan does exist however more governance and process should be in pace related to business continuity planning ",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "Data Handling Best Practices & Policy",
                description: "Data Loss Prevention / Data handeling standards",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "Inconsistent Digital & Physical Processes",
                description: "Paper processes and SOPs are a business standard, vulnerable to delay or limited access as there is a lack of consistency for digital sops/standards",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "Regulatory Compliance & Auditing * RISK",
                description: "FDA auditing required - mission critical for audit logs, backup processes and product validation. Vulnerability in the ability for CLIENT NAME to backup against the FDA audit requirements, or validation certificates.",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
        yield queryInterface.bulkInsert('vulnerabilities', [{
                category: "Operational",
                title: "AD Hygene - Legacy GPs, AD domains",
                description: "Legacy AD Polices, Legacy GPOS, Password expiration, vulnerabile user acounts",
                createdAt: new Date(),
                updatedAt: new Date(),
            }], {});
    }),
    down: (queryInterface, Sequelize) => __awaiter(void 0, void 0, void 0, function* () {
        return queryInterface.bulkDelete("vulnerabilities", null, {});
    })
};
